{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duane de Villiers\\\\Desktop\\\\TrelloAPP\\\\client\\\\src\\\\Card.js\";\nimport './Card.css';\nimport React, { Component } from 'react';\nimport { Button, Dialog } from \"@blueprintjs/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.list_items);\n    };\n\n    this.launchModal = () => {\n      this.setState({\n        modal_open: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal_open: false\n      });\n    };\n\n    this.createCard = () => {\n      //api to create card\n      this.setState({\n        modal_open: false\n      });\n    };\n\n    this.state = {\n      to_do: [],\n      modal_open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardHeaderCell\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.props.list_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardHeaderCell\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            intent: \"success\",\n            text: \"Add\",\n            onClick: this.launchModal,\n            className: \"CardBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            icon: \"info-sign\",\n            onClose: this.closeModal,\n            title: \"Add Card\",\n            isOpen: this.state.modal_open,\n            ...this.state,\n            style: {\n              width: '500px',\n              marginTop: '10px',\n              fontSize: \"16px\",\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [\"Please provide a name for this card\", /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '100px',\n                backgroundColor: 'rgb(0, 176, 178)',\n                margin: '10px',\n                marginBottom: '0px'\n              },\n              icon: \"refresh\",\n              text: this.state.loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                size: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 164\n              }, this) : \"Confirm\",\n              onClick: () => {\n                this.handleClick();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '100px',\n                backgroundColor: 'rgb(251, 38, 91)',\n                margin: '10px',\n                marginBottom: '0px'\n              },\n              icon: \"refresh\",\n              text: \"Cancel\",\n              onClick: () => {\n                this.handleConfirmationClose();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardBody\",\n        children: this.props.list_items.map(item => {\n          console.log(item.name);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CardBodyCell\",\n            children: item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Duane de Villiers/Desktop/TrelloAPP/client/src/Card.js"],"names":["React","Component","Button","Dialog","Card","constructor","props","componentDidMount","console","log","list_items","launchModal","setState","modal_open","closeModal","createCard","state","to_do","render","list_name","width","marginTop","fontSize","display","flexDirection","alignItems","backgroundColor","margin","marginBottom","loading","handleClick","handleConfirmationClose","map","item","name","task"],"mappings":"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","sourcesContent":["\r\nimport './Card.css';\r\nimport React, { Component } from 'react';\r\nimport { Button, Dialog } from \"@blueprintjs/core\";\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            to_do: [],\r\n            modal_open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(this.props.list_items)\r\n    }\r\n\r\n    launchModal = () => {\r\n        this.setState({ modal_open: true })\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ modal_open: false })\r\n    } \r\n    createCard = () => {\r\n        //api to create card\r\n        this.setState({ modal_open: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Card\">\r\n                <div className=\"CardHeader\">\r\n                    <div className=\"CardHeaderCell\">\r\n                        <h2>{this.props.list_name}</h2>\r\n                    </div>\r\n                    <div className=\"CardHeaderCell\">\r\n                        <Button intent=\"success\" text=\"Add\" onClick={this.launchModal} className=\"CardBtn\" />\r\n                        <Dialog\r\n                            icon=\"info-sign\"\r\n                            onClose={this.closeModal}\r\n                            title={\"Add Card\"}\r\n                            isOpen={this.state.modal_open}\r\n                            {...this.state}\r\n                            style={{ width: '500px', marginTop: '10px', fontSize: \"16px\", display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n                        >\r\n                            Please provide a name for this card\r\n            <Button style={{ width: '100px', backgroundColor: 'rgb(0, 176, 178)', margin: '10px', marginBottom: '0px' }} icon=\"refresh\" text={this.state.loading ? <Spinner size={10} /> : \"Confirm\"} onClick={() => {\r\n                                this.handleClick();\r\n                            }} />\r\n                            <Button style={{ width: '100px', backgroundColor: 'rgb(251, 38, 91)', margin: '10px', marginBottom: '0px' }} icon=\"refresh\" text=\"Cancel\" onClick={() => {\r\n                                this.handleConfirmationClose();\r\n                            }} />\r\n                        </Dialog>\r\n                    </div>\r\n                </div>\r\n                <div className=\"CardBody\">\r\n                    {this.props.list_items.map((item) => {\r\n                        console.log(item.name)\r\n                        return (<div className=\"CardBodyCell\">{item.task}</div>);\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}