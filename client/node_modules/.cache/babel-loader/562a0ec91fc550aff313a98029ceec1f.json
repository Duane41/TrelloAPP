{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duane de Villiers\\\\Desktop\\\\TrelloAPP\\\\client\\\\src\\\\Card.js\";\nimport './Card.css';\nimport React, { Component } from 'react';\nimport { Button, Dialog } from \"@blueprintjs/core\";\nimport PopUp from \"./PopUp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.list_items);\n    };\n\n    this.launchModal = () => {\n      this.setState({\n        modal_open: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal_open: false\n      });\n    };\n\n    this.createCard = () => {\n      //api to create card\n      this.setState({\n        modal_open: false\n      });\n    };\n\n    this.state = {\n      to_do: [],\n      modal_open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardHeaderCell\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.props.list_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardHeaderCell\",\n          children: /*#__PURE__*/_jsxDEV(PopUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardBody\",\n        children: this.props.list_items.map(item => {\n          console.log(item.name);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CardBodyCell\",\n            children: item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Duane de Villiers/Desktop/TrelloAPP/client/src/Card.js"],"names":["React","Component","Button","Dialog","PopUp","Card","constructor","props","componentDidMount","console","log","list_items","launchModal","setState","modal_open","closeModal","createCard","state","to_do","render","list_name","map","item","name","task"],"mappings":";AACA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,iBARmB,GAQC,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,UAAvB;AACH,KAVkB;;AAAA,SAYnBC,WAZmB,GAYL,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KAdkB;;AAAA,SAenBC,UAfmB,GAeN,MAAM;AACf,WAAKF,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KAjBkB;;AAAA,SAkBnBE,UAlBmB,GAkBN,MAAM;AACf;AACA,WAAKH,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KArBkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETJ,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAgBDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAA,sBAAK,KAAKZ,KAAL,CAAWa;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACK,KAAKb,KAAL,CAAWI,UAAX,CAAsBU,GAAtB,CAA2BC,IAAD,IAAU;AACjCb,UAAAA,OAAO,CAACC,GAAR,CAAYY,IAAI,CAACC,IAAjB;AACA,8BAAQ;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,sBAA+BD,IAAI,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,kBAAR;AACH,SAHA;AADL;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA1CwB;;AA8C7B,eAAenB,IAAf","sourcesContent":["\r\nimport './Card.css';\r\nimport React, { Component } from 'react';\r\nimport { Button, Dialog } from \"@blueprintjs/core\";\r\nimport PopUp from \"./PopUp.js\"\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            to_do: [],\r\n            modal_open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(this.props.list_items)\r\n    }\r\n\r\n    launchModal = () => {\r\n        this.setState({ modal_open: true })\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ modal_open: false })\r\n    }\r\n    createCard = () => {\r\n        //api to create card\r\n        this.setState({ modal_open: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Card\">\r\n                <div className=\"CardHeader\">\r\n                    <div className=\"CardHeaderCell\">\r\n                        <h2>{this.props.list_name}</h2>\r\n                    </div>\r\n                    <div className=\"CardHeaderCell\">\r\n                        <PopUp/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"CardBody\">\r\n                    {this.props.list_items.map((item) => {\r\n                        console.log(item.name)\r\n                        return (<div className=\"CardBodyCell\">{item.task}</div>);\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}